AWSTemplateFormatVersion: "2010-09-09"
Description: Launch a simple EC2 instance for use with testing VPCs
Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    Description: Type of EC2 instance
  VpcId:
    Type: String
    Default: vpc-08428d50262649497
    Description: VPC ID where resources will be deployed
  ImageId:
    Type: String
    Default: ami-003c24b59bb839e19
    Description: AMI ID for the EC2 instance
  SubnetId:
    Type: String
    Default: 
    Description: Subnet ID where the EC2 instance will be launched
Resources:
  SSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref SSMRole
  MyEC2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref EC2InstanceProfile
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref SubnetId
          AssociatePublicIpAddress: true
          GroupSet:
            - !Ref InstanceSecurityGroup
          DeleteOnTermination: true
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<html><body><h1>Hello from Apache on Amazon Linux 2!</h1></body></html>" > /var/www/html/index.html
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH traffic to EC2 instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Replace with your IP for security in production
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Replace with specific IP ranges in production
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
Outputs:
  InstancePublicIp:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt MyEC2Instance.PublicIp
  WebPageURL:
    Description: URL of the web server
    Value: !Sub "http://${MyEC2Instance.PublicIp}"
