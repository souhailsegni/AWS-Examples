#!/bin/bash

# 1. Create VPC
VPC_ID=$(aws ec2 create-vpc --cidr-block 10.0.0.0/16 --tag-specifications \
"ResourceType=vpc,Tags=[{Key=Name,Value=MyVPC}]" --query 'Vpc.VpcId' --output text)
echo "Created VPC: $VPC_ID"

# 2. Add an Internet Gateway
IGW_ID=$(aws ec2 create-internet-gateway --tag-specifications \
"ResourceType=internet-gateway,Tags=[{Key=Name,Value=MyIGW}]" --query 'InternetGateway.InternetGatewayId' --output text)
aws ec2 attach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID
echo "Created and attached Internet Gateway: $IGW_ID"

# 3. Create Subnets
SUBNET_PUBLIC_1=$(aws ec2 create-subnet --vpc-id $VPC_ID --cidr-block 10.0.1.0/24 --availability-zone eu-west-1a \
--tag-specifications "ResourceType=subnet,Tags=[{Key=Name,Value=PublicSubnet1}]" --query 'Subnet.SubnetId' --output text)
echo "Created Public Subnet 1: $SUBNET_PUBLIC_1"

SUBNET_PRIVATE_1=$(aws ec2 create-subnet --vpc-id $VPC_ID --cidr-block 10.0.3.0/24 --availability-zone eu-west-1a \
--tag-specifications "ResourceType=subnet,Tags=[{Key=Name,Value=PrivateSubnet1}]" --query 'Subnet.SubnetId' --output text)
echo "Created Private Subnet 1: $SUBNET_PRIVATE_1"

SUBNET_PRIVATE_2=$(aws ec2 create-subnet --vpc-id $VPC_ID --cidr-block 10.0.4.0/24 --availability-zone eu-west-1b \
--tag-specifications "ResourceType=subnet,Tags=[{Key=Name,Value=PrivateSubnet2}]" --query 'Subnet.SubnetId' --output text)
echo "Created Private Subnet 2: $SUBNET_PRIVATE_2"

# 4. Create Route Tables
RTB_PUBLIC=$(aws ec2 create-route-table --vpc-id $VPC_ID --tag-specifications \
"ResourceType=route-table,Tags=[{Key=Name,Value=PublicRouteTable}]" --query 'RouteTable.RouteTableId' --output text)
aws ec2 create-route --route-table-id $RTB_PUBLIC --destination-cidr-block 0.0.0.0/0 --gateway-id $IGW_ID
aws ec2 associate-route-table --route-table-id $RTB_PUBLIC --subnet-id $SUBNET_PUBLIC_1
echo "Created and associated Public Route Table: $RTB_PUBLIC"

RTB_PRIVATE=$(aws ec2 create-route-table --vpc-id $VPC_ID --tag-specifications \
"ResourceType=route-table,Tags=[{Key=Name,Value=PrivateRouteTable}]" --query 'RouteTable.RouteTableId' --output text)
aws ec2 associate-route-table --route-table-id $RTB_PRIVATE --subnet-id $SUBNET_PRIVATE_1
aws ec2 associate-route-table --route-table-id $RTB_PRIVATE --subnet-id $SUBNET_PRIVATE_2
echo "Created and associated Private Route Table: $RTB_PRIVATE"

# 5. Create NAT Gateway
EIP_ALLOC_ID=$(aws ec2 allocate-address --domain vpc --query 'AllocationId' --output text)
NAT_GW_ID=$(aws ec2 create-nat-gateway --subnet-id $SUBNET_PUBLIC_1 --allocation-id $EIP_ALLOC_ID \
--tag-specifications "ResourceType=natgateway,Tags=[{Key=Name,Value=MyNATGateway}]" --query 'NatGateway.NatGatewayId' --output text)
echo "Created NAT Gateway: $NAT_GW_ID"

# Add NAT route to Private Route Table
aws ec2 create-route --route-table-id $RTB_PRIVATE --destination-cidr-block 0.0.0.0/0 --nat-gateway-id $NAT_GW_ID

# 6. Security Groups
WEB_SG_ID=$(aws ec2 create-security-group --group-name WebSG --description "Security Group for Web Servers" --vpc-id $VPC_ID --query 'GroupId' --output text)
aws ec2 authorize-security-group-ingress --group-id $WEB_SG_ID --protocol tcp --port 80 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-id $WEB_SG_ID --protocol tcp --port 443 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-id $WEB_SG_ID --protocol tcp --port 22 --cidr 0.0.0.0/0
echo "Created Web Security Group: $WEB_SG_ID"

APP_SG_ID=$(aws ec2 create-security-group --group-name AppSG --description "Security Group for App Servers" --vpc-id $VPC_ID --query 'GroupId' --output text)
aws ec2 authorize-security-group-ingress --group-id $APP_SG_ID --protocol tcp --port 8080 --source-group $WEB_SG_ID
echo "Created App Security Group: $APP_SG_ID"

DB_SG_ID=$(aws ec2 create-security-group --group-name DBSG --description "Security Group for Database Servers" --vpc-id $VPC_ID --query 'GroupId' --output text)
aws ec2 authorize-security-group-ingress --group-id $DB_SG_ID --protocol tcp --port 3306 --source-group $APP_SG_ID
echo "Created Database Security Group: $DB_SG_ID"
