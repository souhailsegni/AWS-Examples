#! /bin/bash

###############################################################################
# function errecho
#
# This function outputs everything sent to it to STDERR (standard error output).
###############################################################################
function errecho() {
  printf "%s\n" "$*" 1>&2
}

###############################################################################
# function copy_file_to_bucket
#
# This function creates a file in the specified bucket.
#
# Parameters:
#       $1 - The name of the bucket to copy the file to.
#       $2 - The path and file name of the local file to copy to the bucket.
#       $3 - The key (name) to call the copy of the file in the bucket.
#
# Returns:
#       0 - If successful.
#       1 - If it fails.
###############################################################################
function copy_file_to_bucket() {
  local response bucket_name source_file destination_file_name
  bucket_name=souhailbucket1900
  source_file=/workspace/AWS-Examples/test/test.py
  destination_file_name=test.py

  # Check if the file exists
  if [ ! -f "$source_file" ]; then
    errecho "ERROR: Source file does not exist: $source_file"
    return 1
  fi

  # Use AWS CLI to copy the file
  response=$(aws s3api put-object \
    --bucket "$bucket_name" \
    --body "$source_file" \
    --key "$destination_file_name" \
    --debug)

  # Check the exit status of the AWS CLI command
  if [[ $? -ne 0 ]]; then
    errecho "ERROR: AWS reports put-object operation failed.\n$response"
    return 1
  fi

  echo "File '$source_file' copied to bucket '$bucket_name' as '$destination_file_name'."
  return 0
}

# Call the function for testing
copy_file_to_bucket "your-bucket-name" "your-local-file.txt" "destination-file-name-in-s3"
